version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  graphql-gateway:
    build:
      context: .
      dockerfile: ./apps/graphql-gateway/Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/graphql-gateway/.env
    depends_on:
      - user-service
      - order-service
      - product-service
    restart: on-failure

  user-service:
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/user-service/.env
    depends_on:
      - kafka
    restart: on-failure

  order-service:
    build:
      context: .
      dockerfile: ./apps/order-service/Dockerfile
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/order-service/.env
    depends_on:
      - kafka
    restart: on-failure

  product-service:
    build:
      context: .
      dockerfile: ./apps/product-service/Dockerfile
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/product-service/.env
    depends_on:
      - kafka
    restart: on-failure